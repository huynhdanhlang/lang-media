version: '3'
services:
  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'
  backend:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    ports:
      - '3000:3000'
    command: npm run backend:dev:docker
    depends_on:
      - postgres
  frontend:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    ports:
      - '4200:4200'
    command: npm run frontend:dev:docker
    depends_on:
      - backend
  frontend-admin:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    ports:
      - '4201:4201'
    command: npm run frontend-admin:dev:docker
    depends_on:
      - backend
  nginx:
    build: ./apps/nginx
    ports:
      - '80:80'
    depends_on:
      - frontend
      - frontend-admin
  postgres:
    container_name: postgres_container
    image: postgres:16.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes: 
      - postgres:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4:8.3
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:8888"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
volumes:
  mono-node-modules: null
  postgres: null
  pgadmin-data: null